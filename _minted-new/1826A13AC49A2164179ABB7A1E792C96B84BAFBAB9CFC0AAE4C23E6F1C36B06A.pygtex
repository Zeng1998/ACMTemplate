\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{//空间足够的情况下开大点}
\PYG{k}{struct} \PYG{n}{SAM}\PYG{p}{\PYGZob{}}
    \PYG{c+c1}{//转移边}
    \PYG{c+c1}{//可以改成map\PYGZlt{}int,int\PYGZgt{} next[N]，可以快速找最小/最大转移字符}
    \PYG{k+kt}{int} \PYG{n}{next}\PYG{p}{[}\PYG{n}{N}\PYG{o}{*}\PYG{l+m+mi}{2}\PYG{p}{][}\PYG{l+m+mi}{26}\PYG{p}{];}
    \PYG{c+c1}{//link边}
    \PYG{k+kt}{int} \PYG{n}{fa}\PYG{p}{[}\PYG{n}{N}\PYG{o}{*}\PYG{l+m+mi}{2}\PYG{p}{];}
    \PYG{c+c1}{//状态内最长后缀长度}
    \PYG{k+kt}{int} \PYG{n}{len}\PYG{p}{[}\PYG{n}{N}\PYG{o}{*}\PYG{l+m+mi}{2}\PYG{p}{];}
    \PYG{c+c1}{//状态对应endpos大小，即子串出现次数}
    \PYG{k+kt}{int} \PYG{n}{num}\PYG{p}{[}\PYG{n}{N}\PYG{o}{*}\PYG{l+m+mi}{2}\PYG{p}{];}
    \PYG{c+c1}{//总节点数}
    \PYG{k+kt}{int} \PYG{n}{cnt}\PYG{p}{;}
    \PYG{c+c1}{//上一个节点}
    \PYG{k+kt}{int} \PYG{n}{lst}\PYG{p}{;}
    \PYG{k+kt}{int} \PYG{n+nf}{newnode}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{l}\PYG{p}{,}\PYG{k+kt}{int} \PYG{n}{s}\PYG{p}{)\PYGZob{}}
        \PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}\PYG{n}{i}\PYG{o}{\PYGZlt{}}\PYG{l+m+mi}{26}\PYG{p}{;}\PYG{n}{i}\PYG{o}{++}\PYG{p}{)\PYGZob{}}
            \PYG{n}{next}\PYG{p}{[}\PYG{n}{cnt}\PYG{p}{][}\PYG{n}{i}\PYG{p}{]}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
        \PYG{n}{len}\PYG{p}{[}\PYG{n}{cnt}\PYG{p}{]}\PYG{o}{=}\PYG{n}{l}\PYG{p}{;}
        \PYG{n}{num}\PYG{p}{[}\PYG{n}{cnt}\PYG{p}{]}\PYG{o}{=}\PYG{n}{s}\PYG{p}{;}
        \PYG{k}{return} \PYG{n}{cnt}\PYG{o}{++}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
    \PYG{c+c1}{//初始化}
    \PYG{k+kt}{void} \PYG{n+nf}{init}\PYG{p}{()\PYGZob{}}
        \PYG{n}{cnt}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
        \PYG{n}{lst}\PYG{o}{=}\PYG{n}{newnode}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{);}
        \PYG{n}{fa}\PYG{p}{[}\PYG{n}{lst}\PYG{p}{]}\PYG{o}{=\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
    \PYG{k+kt}{void} \PYG{n+nf}{add}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{c}\PYG{p}{)\PYGZob{}}
        \PYG{n}{c}\PYG{o}{\PYGZhy{}=}\PYG{l+s+sc}{\PYGZsq{}a\PYGZsq{}}\PYG{p}{;}
        \PYG{k+kt}{int} \PYG{n}{p}\PYG{o}{=}\PYG{n}{lst}\PYG{p}{;}
        \PYG{k+kt}{int} \PYG{n}{cur}\PYG{o}{=}\PYG{n}{newnode}\PYG{p}{(}\PYG{n}{len}\PYG{p}{[}\PYG{n}{p}\PYG{p}{]}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{,}\PYG{l+m+mi}{1}\PYG{p}{);}
        \PYG{c+c1}{//假设当前sam为\PYGZdq{}aabb\PYGZdq{}，起点S为空串，节点5是\PYGZob{}b\PYGZcb{}，节点4是\PYGZob{}aabb,abb,bb\PYGZcb{}}
        \PYG{c+c1}{//定义suffix\PYGZhy{}path为当前字符串的所有后缀的状态，即S[1..i]，S[2..i]...}
        \PYG{c+c1}{//此时的s\PYGZhy{}p就是S\PYGZhy{}5\PYGZhy{}4，(b这个后缀因为endpos大于其他，所以在节点5)}
        \PYG{c+c1}{//每插入一个字符，s\PYGZhy{}p的遍历是从后往前，根据fa边}
        \PYG{c+c1}{//插入的字符是a，而s\PYGZhy{}p上5和4节点都没有a，因此将节点5和4 fa节点6}
        \PYG{c+c1}{//节点6此时为\PYGZob{}aabba,abba,bba,ba\PYGZcb{}}
        \PYG{c+c1}{//当路径上的节点没有a}
        \PYG{k}{while}\PYG{p}{(}\PYG{n}{p}\PYG{o}{!=\PYGZhy{}}\PYG{l+m+mi}{1} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{o}{!}\PYG{n}{next}\PYG{p}{[}\PYG{n}{p}\PYG{p}{][}\PYG{n}{c}\PYG{p}{])\PYGZob{}}
            \PYG{n}{next}\PYG{p}{[}\PYG{n}{p}\PYG{p}{][}\PYG{n}{c}\PYG{p}{]}\PYG{o}{=}\PYG{n}{cur}\PYG{p}{;}
            \PYG{n}{p}\PYG{o}{=}\PYG{n}{fa}\PYG{p}{[}\PYG{n}{p}\PYG{p}{];}
        \PYG{p}{\PYGZcb{}}
        \PYG{k}{if}\PYG{p}{(}\PYG{n}{p}\PYG{o}{==\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)\PYGZob{}}
            \PYG{c+c1}{//对应上面整个路径都没有a的情况}
            \PYG{n}{fa}\PYG{p}{[}\PYG{n}{cur}\PYG{p}{]}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}\PYG{k}{else}\PYG{p}{\PYGZob{}}
            \PYG{c+c1}{//路径上找到一个有a，往前肯定都有a}
            \PYG{k+kt}{int} \PYG{n}{q}\PYG{o}{=}\PYG{n}{next}\PYG{p}{[}\PYG{n}{p}\PYG{p}{][}\PYG{n}{c}\PYG{p}{];}
            \PYG{k}{if}\PYG{p}{(}\PYG{n}{len}\PYG{p}{[}\PYG{n}{q}\PYG{p}{]}\PYG{o}{==}\PYG{n}{len}\PYG{p}{[}\PYG{n}{p}\PYG{p}{]}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{)\PYGZob{}}
                \PYG{c+c1}{//这里节点S(p)为空串，而节点1(q)为\PYGZob{}a\PYGZcb{}，因此将新节点6 fa节点1}
                \PYG{n}{fa}\PYG{p}{[}\PYG{n}{cur}\PYG{p}{]}\PYG{o}{=}\PYG{n}{q}\PYG{p}{;}
            \PYG{p}{\PYGZcb{}}\PYG{k}{else}\PYG{p}{\PYGZob{}}
                \PYG{c+c1}{//st[q].len\PYGZgt{}st[p].len+1}
                \PYG{c+c1}{//假设当前sam为\PYGZdq{}aab\PYGZdq{}，起点S为空串，节点4是\PYGZob{}aab,ab,b\PYGZcb{}}
                \PYG{c+c1}{//此时的s\PYGZhy{}p就是S\PYGZhy{}3，要插入的字符是b，路径上S节点有b，指向节点3}
                \PYG{c+c1}{//而st[3].len\PYGZgt{}st[S].len+1，因此需要将节点3拆分}
                \PYG{c+c1}{//把从节点S+b得到的后缀\PYGZob{}b\PYGZcb{}分给新的节点5}
                \PYG{c+c1}{//将q拆成两个节点，p\PYGZhy{}\PYGZgt{}cl\PYGZhy{}\PYGZgt{}new}
                \PYG{k+kt}{int} \PYG{n}{cl}\PYG{o}{=}\PYG{n}{newnode}\PYG{p}{(}\PYG{n}{len}\PYG{p}{[}\PYG{n}{p}\PYG{p}{]}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{);}
                \PYG{n}{fa}\PYG{p}{[}\PYG{n}{cl}\PYG{p}{]}\PYG{o}{=}\PYG{n}{fa}\PYG{p}{[}\PYG{n}{q}\PYG{p}{];}
                \PYG{n}{memcpy}\PYG{p}{(}\PYG{n}{next}\PYG{p}{[}\PYG{n}{cl}\PYG{p}{],}\PYG{n}{next}\PYG{p}{[}\PYG{n}{q}\PYG{p}{],}\PYG{k}{sizeof}\PYG{p}{(}\PYG{n}{next}\PYG{p}{[}\PYG{n}{cl}\PYG{p}{]));}
                \PYG{k}{while}\PYG{p}{(}\PYG{n}{p}\PYG{o}{!=\PYGZhy{}}\PYG{l+m+mi}{1} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{next}\PYG{p}{[}\PYG{n}{p}\PYG{p}{][}\PYG{n}{c}\PYG{p}{]}\PYG{o}{==}\PYG{n}{q}\PYG{p}{)\PYGZob{}}
                    \PYG{c+c1}{//之前路径上所有p走向q的，现在全部走向q拆出的新节点}
                    \PYG{n}{next}\PYG{p}{[}\PYG{n}{p}\PYG{p}{][}\PYG{n}{c}\PYG{p}{]}\PYG{o}{=}\PYG{n}{cl}\PYG{p}{;}
                    \PYG{n}{p}\PYG{o}{=}\PYG{n}{fa}\PYG{p}{[}\PYG{n}{p}\PYG{p}{];}
                \PYG{p}{\PYGZcb{}}
                \PYG{c+c1}{//q和新节点都fa向拆出节点}
                \PYG{n}{fa}\PYG{p}{[}\PYG{n}{q}\PYG{p}{]}\PYG{o}{=}\PYG{n}{fa}\PYG{p}{[}\PYG{n}{cur}\PYG{p}{]}\PYG{o}{=}\PYG{n}{cl}\PYG{p}{;}
            \PYG{p}{\PYGZcb{}}
        \PYG{p}{\PYGZcb{}}
        \PYG{c+c1}{//更新最后一个节点}
        \PYG{n}{lst}\PYG{o}{=}\PYG{n}{cur}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}\PYG{n}{ac}\PYG{p}{;}
\end{Verbatim}
